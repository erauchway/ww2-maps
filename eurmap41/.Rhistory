theme_set(theme_void() +
theme(legend.position = "bottom",
text = element_text(family = "Futura Medium"),
plot.title = element_markdown(size = rel(1.0), hjust = 1, vjust = -10),
plot.subtitle = element_markdown(size = rel(0.8)),
legend.title = element_text(size = rel(0.5)),
legend.text = element_text(size = rel(0.6)),
plot.caption = element_markdown(hjust = 0, size = rel(0.5)),
panel.background = element_rect(fill = "#f7fdff", color = "#f7fdff")))
minvars <- c("NAME", "geometry")
#Europe Albers equal area conic projection, https://epsg.io/102013
target_crs <- "ESRI:102013"
setwd("~/Documents/ND-nazis/maps41/learn/buildeurmap41/")
load("eurs3.rds")
# re Greece, see Robin Higham, Diary of a Disaster
# Chunk 2
#Read borders
euromap <- eurs
#Set crs
euromap <- st_transform(euromap, crs = target_crs)
#Get more territory
atlmap <- st_read("~/Documents/ww2-maps/atlmap40/atlmap40.geojson")
atlmap <- st_transform(atlmap, crs = target_crs)
rdo <- atlmap[which(atlmap$NAME == "Rio de Oro"),]
euromap <- rbind(euromap, rdo)
sub <- st_read(dsn = "~/Documents/ND-nazis/maps41/learn/ne_50m_admin_0_map_subunits/", layer = "ne_50m_admin_0_map_subunits")
sub <- st_transform(sub, crs = target_crs)
pal <- sub[which(sub$SOVEREIGNT == "Israel" |
sub$SOVEREIGNT == "Jordan"),]
pal <- st_union(pal)
pal <- st_as_sf(tibble("NAME" = "Palestine and Transjordan", "geometry" = pal))
euromap <- euromap[which(euromap$NAME != "Palestine"),]
euromap <- euromap[which(euromap$NAME != "Transjordan"),]
euromap <- rbind(euromap, pal)
leb <- sub[which(sub$SOVEREIGNT == "Lebanon"),]
leb <- st_union(leb)
leb <- st_as_sf(tibble("NAME" = "Lebanon", "geometry" = leb))
euromap <- euromap[which(euromap$NAME != "Lebanon"),]
euromap<- rbind(euromap, leb)
syr <- sub[which(sub$SOVEREIGNT == "Syria"),]
syr <- st_union(syr)
syr <- st_as_sf(tibble("NAME" = "Syria", "geometry" = syr))
euromap <- euromap[which(euromap$NAME != "Syria"),]
euromap <- rbind(euromap, syr)
ar <- sub[which(sub$SOVEREIGNT == "Saudi Arabia"),]
ar <- st_union(ar)
ar <- st_as_sf(tibble("NAME" = "Saudi Arabia", "geometry" = ar))
euromap <- euromap[which(euromap$NAME != "Saudi Arabia"),]
euromap <- rbind(euromap, ar)
#Fix UK / Channel Islands
ch <- sub[which(sub$ADMIN == "Jersey" |
sub$ADMIN == "Guernsey"),]
ch <- st_union(ch)
ch <- st_as_sf(tibble("NAME" = "Channel Islands", "geometry" = ch))
uk <- sub[which(sub$ADMIN == "United Kingdom" |
sub$ADMIN == "Isle of Man"),]
uk <- st_union(uk)
uk <- st_as_sf(tibble("NAME" = "United Kingdom", "geometry" = uk))
euromap <- euromap[which(euromap$NAME != "United Kingdom"),]
euromap <- rbind(euromap, uk)
euromap <- rbind(euromap, ch)
mor <- st_read("morocco.geojson")
spm <- st_read("spm.geojson")
mor <- st_difference(mor, spm)
mor <- st_union(mor)
mor <- st_as_sf(tibble("NAME" = "Morocco", "geometry" = mor))
mor <-st_transform(mor, crs = target_crs)
spm <- st_union(spm)
spm <- st_as_sf(tibble("NAME" = "Spanish Morocco", "geometry" = spm))
spm <- st_transform(spm, crs = target_crs)
euromap <- euromap[which(euromap$NAME != "Morocco"),]
euromap <- rbind(euromap, mor)
euromap <- rbind(euromap, spm)
eurmap41 <- st_read(dsn = "~/Documents/ND-nazis/maps41/learn/EuropeanBorders_WWII", layer = "December_31_1940")
gib <- eurmap41[which(eurmap41$Name == "Gibraltar"),]
gib <- st_union(gib)
gib <- st_as_sf(tibble("NAME" = "Gibraltar", "geometry" = gib))
gib <- st_transform(gib, crs = target_crs)
euromap <- rbind(euromap, gib)
# Chunk 3
eurm <- ms_simplify(euromap)
eurm <- rbind(eurm, gib)
#Read status
status <- read_csv("noms.csv")
#Add status to map
eurm <- left_join(eurm, status)
#Create ordered factor for status
eurm <- eurm %>%
mutate(eurm, status_ord = factor(status, levels = c("Axis",
"Axis-occupied",
"Vichy",
"Neutral",
"Axis-nonaggressor",
"Allies",
"Allies-occupied",
ordered = TRUE)))
#Create divergent palette
mypal = c("#008080", "#70a494", "#b4c8a8", "#f6edbd", "#a16928", "#ca562c", "#edbb8a")
# Generate centroids as reference points for labels; file noms.csv already contains x and y adjustments for labels relative to these centroids
eurm <- cbind(eurm, st_coordinates(st_centroid(eurm)))
# Establish major and minor labels based on variable "maj" from nom.csv
majlab <- eurm[which(eurm$maj == 4),]
minlab <- eurm[which(eurm$maj == 3),]
miclab <- eurm[which(eurm$maj == 2),]
# Chunk 4
#Set coordinates for European region, convert to appropriate crs
disp_win_wgs84 <- st_sfc(st_point(c(-10, 27)), st_point(c(71, 65)), crs = 4326)
disp_win_trans <- st_transform(disp_win_wgs84, crs = target_crs)
disp_win_coord <- st_coordinates(disp_win_trans)
#Plot map, with small black borders and fill colors according to status of territory
p <- ggplot(data = eurm, color = alpha(c("black"),0.5))
p + geom_sf(mapping = aes(fill = status_ord), alpha = .6, size = 0.06) +
#Crop and full bleed to borders
coord_sf(xlim = disp_win_coord[,'X'], ylim = disp_win_coord[, 'Y'], datum = target_crs, expand = FALSE) +
# Add colors based on divergent color scheme above
scale_fill_manual(values = mypal) # +
# Add major place labels
#  geom_richtext(data = majlab, inherit.aes = FALSE, mapping = aes(X, Y, label = mylabels), family = "Futura Medium", size = 5, fill = NA, label.color = NA, nudge_x = majlab$nx, nudge_y = majlab$ny, na.rm = TRUE) +
# Add minor place labels
#  geom_richtext(data = minlab, inherit.aes = FALSE, mapping = aes(X, Y, label = mylabels), family = "Futura Medium", size = 3, fill = NA, label.color = NA, nudge_x = minlab$nx, nudge_y = minlab$ny, na.rm = TRUE) +
# Add smallest place labels
#  geom_richtext(data = miclab, inherit.aes = FALSE, mapping = aes(X, Y, label = mylabels), family = "Futura Medium", size = 2, fill = NA, label.color = NA, nudge_x = miclab$nx, nudge_y = miclab$ny, na.rm = TRUE)
View(eurm)
View(eurm)
eurm <- eurm[c("NAME", "geometry")]
eurm <- st_transform(eurm, crs = 4326)
st_write(eurm, "~/Desktop/euromap.geojson")
# Chunk 1: setup
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE, results = "hide")
library(tidyverse)
library(sf)
library(cowplot)
library(ggtext)
library(rmapshaper)
sf_use_s2(FALSE)
# Set theme preferences. Futura for the mid-century look. Also adding a light blue panel background.
theme_set(theme_void() +
theme(legend.position = "bottom",
text = element_text(family = "Futura Medium"),
plot.title = element_markdown(size = rel(2.0), hjust = 0, vjust = -10),
plot.subtitle = element_markdown(size = rel(1.0)),
legend.title = element_text(size = rel(0.8)),
legend.text = element_text(size = rel(0.7)),
plot.caption = element_markdown(hjust = 0, size = rel(0.5)),
panel.background = element_rect(fill = "#f7fdff", color = "#f7fdff")))
minvars <- c("NAME", "geometry")
#Europe Albers equal area conic projection, https://epsg.io/102013
target_crs <- "ESRI:102013"
#Read borders
euromap <- st_read("euromap.geojson")
# Chunk 2
#Set crs
euromap <- st_transform(euromap, crs = target_crs)
#Read status and other variables
status <- read_csv("noms.csv")
#Add status to map
euromap <- left_join(euromap, status)
#Create ordered factor for status
euromap <- euromap %>%
mutate(euromap, status_ord = factor(status, levels = c("Axis",
"Axis-occupied",
"Vichy",
"Neutral",
"Axis-nonaggressor",
"Allies",
"Allies-occupied",
"Belligerent",
ordered = TRUE)))
#Create divergent palette
mypal = c("#008080", "#70a494", "#b4c8a8", "#f6edbd", "#a16928", "#ca562c", "#edbb8a", "#d46780")
# Generate centroids as reference points for labels; file noms.csv already contains x and y adjustments for labels relative to these centroids
euromap <- cbind(euromap, st_coordinates(st_centroid(euromap)))
# Establish major and minor labels based on variable "maj" from nom.csv
majlab <- euromap[which(euromap$maj == 4),]
minlab <- euromap[which(euromap$maj == 3),]
miclab <- euromap[which(euromap$maj == 2),]
blitz <- read_csv(file = "blitz.csv")
blitz <- st_as_sf(blitz, coords = c("lon", "lat"), crs = 4326, agr = "identity")
blitz <- st_transform(blitz, crs = target_crs)
# Chunk 3
#Set coordinates for European region, convert to appropriate crs
disp_win_wgs84 <- st_sfc(st_point(c(-10, 27)), st_point(c(66, 63)), crs = 4326)
disp_win_trans <- st_transform(disp_win_wgs84, crs = target_crs)
disp_win_coord <- st_coordinates(disp_win_trans)
#Plot map, with small black borders and fill colors according to status of territory
p <- ggplot(data = euromap, color = alpha(c("black"),0.5))
p + geom_sf(mapping = aes(fill = status_ord), alpha = .6, size = 0.1) +
#Add Blitz targets
geom_sf(data = blitz, fill = "grey10", color = "black", size = 3, pch = 10) +
#Crop and full bleed to borders
coord_sf(xlim = disp_win_coord[,'X'], ylim = disp_win_coord[, 'Y'], datum = target_crs, expand = FALSE) +
# Add colors based on divergent color scheme above
scale_fill_manual(values = mypal)  +
# Add major place labels
geom_richtext(data = majlab, inherit.aes = FALSE, mapping = aes(X, Y, label = mylabels), family = "Futura Medium", size = 7, fill = NA, label.color = NA, nudge_x = majlab$nx, nudge_y = majlab$ny, na.rm = TRUE) +
# Add minor place labels
geom_richtext(data = minlab, inherit.aes = FALSE, mapping = aes(X, Y, label = mylabels), family = "Futura Medium", size = 5, fill = NA, label.color = NA, nudge_x = minlab$nx, nudge_y = minlab$ny, na.rm = TRUE) +
# Add smallest place labels
geom_richtext(data = miclab, inherit.aes = FALSE, mapping = aes(X, Y, label = mylabels), family = "Futura Medium", size = 3, fill = NA, label.color = NA, nudge_x = miclab$nx, nudge_y = miclab$ny, na.rm = TRUE) +
guides(fill = guide_legend(ncol = 7)) +
#Label Atlantic Ocean
geom_richtext(x = -2000000,
y = 3300000,
color = "lightskyblue2",
family = "Futura Medium Italic",
size = 9,
hjust = 0,
fill = NA,
label.color = NA,
label = "Atlantic<br>Ocean") +
#Label North Sea
geom_richtext(x = -550000,
y = 2870000,
color = "lightskyblue2",
family = "Futura Medium Italic",
size = 5,
hjust = 0,
fill = NA,
label.color = NA,
label = "North<br>Sea") +
#Label Baltic Sea
geom_richtext(x = 420000,
y = 2900000,
color = "lightskyblue2",
family = "Futura Medium Italic",
size = 4,
hjust = 0,
fill = NA,
label.color = NA,
label = "Baltic<br>Sea") +
#Label Mediterranean Sea
geom_richtext(x = 400000,
y = 500000,
color = "lightskyblue2",
family = "Futura Medium Italic",
size = 6,
hjust = 0,
fill = NA,
label.color = NA,
label = "Mediterranean Sea") +
#Label Black Sea
geom_richtext(x = 1760000,
y = 1750000,
color = "lightskyblue2",
family = "Futura Medium Italic",
size = 5,
hjust = 0,
fill = NA,
label.color = NA,
label = "Black Sea") +
labs(title = "European and North African areas, end of 1940",
subtitle = "Showing status, including German and Soviet annexations since 1938",
caption = "Map data from Natural Earth and Michael de Groot, \"Building the New Order: 1938--1945,\" Stanford Spatial History Lab (2010). Made using R with ggplot and sf, as well as some use of QGIS. With gratitude especially to Kieran Healy.",
fill = "Status")
getwd()
setwd("~/Documents/ww2-maps/eurmap41/")
# Chunk 1: setup
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE, results = "hide")
library(tidyverse)
library(sf)
library(cowplot)
library(ggtext)
library(rmapshaper)
sf_use_s2(FALSE)
# Set theme preferences. Futura for the mid-century look. Also adding a light blue panel background.
theme_set(theme_void() +
theme(legend.position = "bottom",
text = element_text(family = "Futura Medium"),
plot.title = element_markdown(size = rel(2.0), hjust = 0, vjust = -10),
plot.subtitle = element_markdown(size = rel(1.0)),
legend.title = element_text(size = rel(0.8)),
legend.text = element_text(size = rel(0.7)),
plot.caption = element_markdown(hjust = 0, size = rel(0.5)),
panel.background = element_rect(fill = "#f7fdff", color = "#f7fdff")))
minvars <- c("NAME", "geometry")
#Europe Albers equal area conic projection, https://epsg.io/102013
target_crs <- "ESRI:102013"
#Read borders
euromap <- st_read("euromap.geojson")
# Chunk 2
#Set crs
euromap <- st_transform(euromap, crs = target_crs)
#Read status and other variables
status <- read_csv("noms.csv")
#Add status to map
euromap <- left_join(euromap, status)
#Create ordered factor for status
euromap <- euromap %>%
mutate(euromap, status_ord = factor(status, levels = c("Axis",
"Axis-occupied",
"Vichy",
"Neutral",
"Axis-nonaggressor",
"Allies",
"Allies-occupied",
"Belligerent",
ordered = TRUE)))
#Create divergent palette
mypal = c("#008080", "#70a494", "#b4c8a8", "#f6edbd", "#a16928", "#ca562c", "#edbb8a", "#d46780")
# Generate centroids as reference points for labels; file noms.csv already contains x and y adjustments for labels relative to these centroids
euromap <- cbind(euromap, st_coordinates(st_centroid(euromap)))
# Establish major and minor labels based on variable "maj" from nom.csv
majlab <- euromap[which(euromap$maj == 4),]
minlab <- euromap[which(euromap$maj == 3),]
miclab <- euromap[which(euromap$maj == 2),]
blitz <- read_csv(file = "blitz.csv")
blitz <- st_as_sf(blitz, coords = c("lon", "lat"), crs = 4326, agr = "identity")
blitz <- st_transform(blitz, crs = target_crs)
# Chunk 3
#Set coordinates for European region, convert to appropriate crs
disp_win_wgs84 <- st_sfc(st_point(c(-10, 27)), st_point(c(66, 63)), crs = 4326)
disp_win_trans <- st_transform(disp_win_wgs84, crs = target_crs)
disp_win_coord <- st_coordinates(disp_win_trans)
#Plot map, with small black borders and fill colors according to status of territory
p <- ggplot(data = euromap, color = alpha(c("black"),0.5))
p + geom_sf(mapping = aes(fill = status_ord), alpha = .6, size = 0.1) +
#Add Blitz targets
geom_sf(data = blitz, fill = "grey10", color = "black", size = 3, pch = 10) +
#Crop and full bleed to borders
coord_sf(xlim = disp_win_coord[,'X'], ylim = disp_win_coord[, 'Y'], datum = target_crs, expand = FALSE) +
# Add colors based on divergent color scheme above
scale_fill_manual(values = mypal)  +
# Add major place labels
geom_richtext(data = majlab, inherit.aes = FALSE, mapping = aes(X, Y, label = mylabels), family = "Futura Medium", size = 7, fill = NA, label.color = NA, nudge_x = majlab$nx, nudge_y = majlab$ny, na.rm = TRUE) +
# Add minor place labels
geom_richtext(data = minlab, inherit.aes = FALSE, mapping = aes(X, Y, label = mylabels), family = "Futura Medium", size = 5, fill = NA, label.color = NA, nudge_x = minlab$nx, nudge_y = minlab$ny, na.rm = TRUE) +
# Add smallest place labels
geom_richtext(data = miclab, inherit.aes = FALSE, mapping = aes(X, Y, label = mylabels), family = "Futura Medium", size = 3, fill = NA, label.color = NA, nudge_x = miclab$nx, nudge_y = miclab$ny, na.rm = TRUE) +
guides(fill = guide_legend(ncol = 7)) +
#Label Atlantic Ocean
geom_richtext(x = -2000000,
y = 3300000,
color = "lightskyblue2",
family = "Futura Medium Italic",
size = 9,
hjust = 0,
fill = NA,
label.color = NA,
label = "Atlantic<br>Ocean") +
#Label North Sea
geom_richtext(x = -550000,
y = 2870000,
color = "lightskyblue2",
family = "Futura Medium Italic",
size = 5,
hjust = 0,
fill = NA,
label.color = NA,
label = "North<br>Sea") +
#Label Baltic Sea
geom_richtext(x = 420000,
y = 2900000,
color = "lightskyblue2",
family = "Futura Medium Italic",
size = 4,
hjust = 0,
fill = NA,
label.color = NA,
label = "Baltic<br>Sea") +
#Label Mediterranean Sea
geom_richtext(x = 400000,
y = 500000,
color = "lightskyblue2",
family = "Futura Medium Italic",
size = 6,
hjust = 0,
fill = NA,
label.color = NA,
label = "Mediterranean Sea") +
#Label Black Sea
geom_richtext(x = 1760000,
y = 1750000,
color = "lightskyblue2",
family = "Futura Medium Italic",
size = 5,
hjust = 0,
fill = NA,
label.color = NA,
label = "Black Sea") +
labs(title = "European and North African areas, end of 1940",
subtitle = "Showing status, including German and Soviet annexations since 1938",
caption = "Map data from Natural Earth and Michael de Groot, \"Building the New Order: 1938--1945,\" Stanford Spatial History Lab (2010). Made using R with ggplot and sf, as well as some use of QGIS. With gratitude especially to Kieran Healy.",
fill = "Status")
# Chunk 1: setup
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE, results = "hide")
library(tidyverse)
library(sf)
library(cowplot)
library(ggtext)
library(rmapshaper)
sf_use_s2(FALSE)
# Set theme preferences. Futura for the mid-century look. Also adding a light blue panel background.
theme_set(theme_void() +
theme(legend.position = "bottom",
text = element_text(family = "Futura Medium"),
plot.title = element_markdown(size = rel(2.0), hjust = 0, vjust = -10),
plot.subtitle = element_markdown(size = rel(1.0)),
legend.title = element_text(size = rel(0.8)),
legend.text = element_text(size = rel(0.7)),
plot.caption = element_markdown(hjust = 0, size = rel(0.5)),
panel.background = element_rect(fill = "#f7fdff", color = "#f7fdff")))
minvars <- c("NAME", "geometry")
#Europe Albers equal area conic projection, https://epsg.io/102013
target_crs <- "ESRI:102013"
#Read borders
euromap <- st_read("euromap.geojson")
# Chunk 2
#Set crs
euromap <- st_transform(euromap, crs = target_crs)
#Read status and other variables
status <- read_csv("noms.csv")
#Add status to map
euromap <- left_join(euromap, status)
#Create ordered factor for status
euromap <- euromap %>%
mutate(euromap, status_ord = factor(status, levels = c("Axis",
"Axis-occupied",
"Vichy",
"Neutral",
"Axis-nonaggressor",
"Allies",
"Allies-occupied",
"Belligerent",
ordered = TRUE)))
#Create divergent palette
mypal = c("#008080", "#70a494", "#b4c8a8", "#f6edbd", "#a16928", "#ca562c", "#edbb8a", "#d46780")
# Generate centroids as reference points for labels; file noms.csv already contains x and y adjustments for labels relative to these centroids
euromap <- cbind(euromap, st_coordinates(st_centroid(euromap)))
# Establish major and minor labels based on variable "maj" from nom.csv
majlab <- euromap[which(euromap$maj == 4),]
minlab <- euromap[which(euromap$maj == 3),]
miclab <- euromap[which(euromap$maj == 2),]
#blitz <- read_csv(file = "blitz.csv")
#blitz <- st_as_sf(blitz, coords = c("lon", "lat"), crs = 4326, agr = "identity")
#blitz <- st_transform(blitz, crs = target_crs)
# Chunk 3
#Set coordinates for European region, convert to appropriate crs
disp_win_wgs84 <- st_sfc(st_point(c(-10, 27)), st_point(c(66, 63)), crs = 4326)
disp_win_trans <- st_transform(disp_win_wgs84, crs = target_crs)
disp_win_coord <- st_coordinates(disp_win_trans)
#Plot map, with small black borders and fill colors according to status of territory
p <- ggplot(data = euromap, color = alpha(c("black"),0.5))
p + geom_sf(mapping = aes(fill = status_ord), alpha = .6, size = 0.1) +
#Add Blitz targets
#  geom_sf(data = blitz, fill = "grey10", color = "black", size = 3, pch = 10) +
#Crop and full bleed to borders
coord_sf(xlim = disp_win_coord[,'X'], ylim = disp_win_coord[, 'Y'], datum = target_crs, expand = FALSE) +
# Add colors based on divergent color scheme above
scale_fill_manual(values = mypal)  +
# Add major place labels
geom_richtext(data = majlab, inherit.aes = FALSE, mapping = aes(X, Y, label = mylabels), family = "Futura Medium", size = 7, fill = NA, label.color = NA, nudge_x = majlab$nx, nudge_y = majlab$ny, na.rm = TRUE) +
# Add minor place labels
geom_richtext(data = minlab, inherit.aes = FALSE, mapping = aes(X, Y, label = mylabels), family = "Futura Medium", size = 5, fill = NA, label.color = NA, nudge_x = minlab$nx, nudge_y = minlab$ny, na.rm = TRUE) +
# Add smallest place labels
geom_richtext(data = miclab, inherit.aes = FALSE, mapping = aes(X, Y, label = mylabels), family = "Futura Medium", size = 3, fill = NA, label.color = NA, nudge_x = miclab$nx, nudge_y = miclab$ny, na.rm = TRUE) +
guides(fill = guide_legend(ncol = 8)) +
#Label Atlantic Ocean
geom_richtext(x = -2000000,
y = 3300000,
color = "lightskyblue2",
family = "Futura Medium Italic",
size = 9,
hjust = 0,
fill = NA,
label.color = NA,
label = "Atlantic<br>Ocean") +
#Label North Sea
geom_richtext(x = -550000,
y = 2870000,
color = "lightskyblue2",
family = "Futura Medium Italic",
size = 5,
hjust = 0,
fill = NA,
label.color = NA,
label = "North<br>Sea") +
#Label Baltic Sea
geom_richtext(x = 420000,
y = 2900000,
color = "lightskyblue2",
family = "Futura Medium Italic",
size = 4,
hjust = 0,
fill = NA,
label.color = NA,
label = "Baltic<br>Sea") +
#Label Mediterranean Sea
geom_richtext(x = 400000,
y = 500000,
color = "lightskyblue2",
family = "Futura Medium Italic",
size = 6,
hjust = 0,
fill = NA,
label.color = NA,
label = "Mediterranean Sea") +
#Label Black Sea
geom_richtext(x = 1760000,
y = 1750000,
color = "lightskyblue2",
family = "Futura Medium Italic",
size = 5,
hjust = 0,
fill = NA,
label.color = NA,
label = "Black Sea") +
labs(title = "European and North African areas, end of 1940",
subtitle = "Showing status, including German and Soviet annexations since 1938",
caption = "Map data from Natural Earth and Michael de Groot, \"Building the New Order: 1938--1945,\" Stanford Spatial History Lab (2010). Made using R with ggplot and sf, as well as some use of QGIS. With gratitude especially to Kieran Healy.",
fill = "Status")
mal <- euromap[which(euromap$NAME == "Malta"),]
ggplot(mal) + geom_sf()
